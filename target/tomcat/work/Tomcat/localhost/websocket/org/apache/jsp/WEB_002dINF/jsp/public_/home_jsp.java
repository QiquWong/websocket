/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2014-03-27 16:30:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.public_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/template/include.jsp", Long.valueOf(1395329047000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div style=\"padding-top: 40px;\">\n");
      out.write("\t<h3>Welcome Websockets!</h3>\n");
      out.write("\t\n");
      out.write("\t<noscript><h2 style=\"color: #ff0000\">Seems your browser doesn't support Javascript! Websocket relies on Javascript being enabled. Please enable\n");
      out.write("\t    Javascript and reload this page!</h2></noscript>\n");
      out.write("\t<div>\n");
      out.write("\t    <div>\n");
      out.write("\t        <button id=\"connect\" onclick=\"connect();\">Connect</button>\n");
      out.write("\t        <button id=\"disconnect\" disabled=\"disabled\" onclick=\"disconnect();\">Disconnect</button>\n");
      out.write("\t    </div>\n");
      out.write("\t    <div id=\"conversationDiv\" style=\"padding-top: 20px; display: none;\">\n");
      out.write("\t       ");
      out.write("\n");
      out.write("\t        <button id=\"sendName\" onclick=\"getTickers();\">Get Tickers</button>\n");
      out.write("\t        <p id=\"response\"></p>\n");
      out.write("\t    </div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("        var stompClient = null;\n");
      out.write("\n");
      out.write("        function setConnected(connected) {\n");
      out.write("            document.getElementById('connect').disabled = connected;\n");
      out.write("            document.getElementById('disconnect').disabled = !connected;\n");
      out.write("            document.getElementById('conversationDiv').style.display = connected ? 'block' : 'none';\n");
      out.write("            document.getElementById('response').innerHTML = '';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function connect() {\n");
      out.write("        \tvar headers = {\n");
      out.write("        \t\t      login: 'admin',\n");
      out.write("        \t\t      passcode: 'admin',\n");
      out.write("        \t\t      'hash':'secret'};\n");
      out.write("           // var socket = new SockJS('");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("');\n");
      out.write("           // stompClient = Stomp.over(socket);\n");
      out.write("            stompClient = Stomp.client('ws://localhost:8080/websocket/stomp/websocket?hash=1234567890&api_key=key');\n");
      out.write("            stompClient.connect(headers, function(frame) {\n");
      out.write("                setConnected(true);\n");
      out.write("                console.log('Connected: ' + frame);\n");
      out.write("                stompClient.subscribe('/topic/tickers', function(response){\n");
      out.write("                    //showGreeting(JSON.parse(response.body));\n");
      out.write("                    showGreeting(response.body);\n");
      out.write("                }, headers);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function disconnect() {\n");
      out.write("            stompClient.disconnect();\n");
      out.write("            setConnected(false);\n");
      out.write("            console.log(\"Disconnected\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function getTickers() {\n");
      out.write("            stompClient.send('/app/tickers', {}, {});\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function showGreeting(message) {\n");
      out.write("            var response = document.getElementById('response');\n");
      out.write("            var p = document.createElement('p');\n");
      out.write("            p.style.wordWrap = 'break-word';\n");
      out.write("            p.appendChild(document.createTextNode(message));\n");
      out.write("            response.appendChild(p);\n");
      out.write("        }\n");
      out.write("    </script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/jsp/public/home.jsp(35,39) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/stomp");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }
}
